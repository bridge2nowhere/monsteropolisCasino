#include <Tinyfont.h>
#include <Arduboy2.h>

Arduboy2 arduboy;
Tinyfont tinyfont = Tinyfont(arduboy.sBuffer, Arduboy2::width(), Arduboy2::height());

int gold = 100;

const char * const LizardNames[] PROGMEM = {"Iv","Jhox","Edres","Urthi","Odhu","Dulrurth","Irthi","Nurhticun","Netirre","Rudegroh","Shosj","Vaess","Thacherk","Korhti","Nirhty","Boshu","Repestri","Asharu","Tork","Shisk","Doskos","Maslo","Ogge","Otes","Daltekhi","Thothric","Lo","Esh","Nalthis","Etrin","Thurdyss","Thargox","Thoggy","Egisort","Stistink","Lortgonk"};
const unsigned char Splash[] PROGMEM = {0x00, 0xe0, 0xe0, 0xc0, 0x40, 0x60, 0xe0, 0xc0, 0xc0, 0x40, 0x40, 0xc0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7, 0xfc, 0xfe, 0x3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xc6, 0xcf, 0xc6, 0x00, 0x00, 0x00, 0x80, 0x80, 0xc0, 0x20, 0x60, 0x60, 0x20, 0x00, 0x00, 0x3f, 0x3f, 0x3f, 0x00, 0x00, 0x20, 0xff, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x00, 0x3, 0xff, 0xff, 0x00, 0x00, 0x00, 0x1, 0xff, 0xff, 0x3, 0x1, 0x3, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x38, 0xfc, 0xfe, 0x82, 0xc7, 0xc7, 0xe6, 0x80, 0x00, 0x00, 0x1, 0x1, 0xff, 0xff, 0x3, 0x2, 0x00, 0x00, 0xf0, 0xf8, 0xc, 0x3e, 0xfc, 0xe0, 0x00, 0x00, 0x1c, 0xfe, 0xf8, 0xc, 0xe, 0x1e, 0xc, 0x00, 0x00, 0xf8, 0xfc, 0x6, 0x6, 0x1f, 0xfe, 0xf8, 0x00, 0x00, 0x00, 0x1, 0xff, 0xfe, 0x2, 0x3, 0x7, 0xff, 0xfe, 0x00, 0x00, 0x00, 0xfc, 0xfe, 0xff, 0x1, 0x1, 0x3, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x40, 0x00, 0x00, 0x00, 0x3, 0x27, 0x76, 0x62, 0x22, 0x23, 0x1f, 0xe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3, 0x7, 0x3, 0x2, 0x1, 0x1, 0x00, 0x00, 0x00, 0x00, 0xf, 0xf, 0x6, 0x00, 0x00, 0xf, 0x3f, 0x1f, 0x00, 0x00, 0x00, 0x10, 0x38, 0x79, 0xf0, 0x60, 0x20, 0x3f, 0x1f, 0x00, 0x00, 0x00, 0x60, 0xff, 0xff, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x86, 0x3, 0x1, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xe0, 0xc0, 0x40, 0x3f, 0x1f, 0x00, 0x00, 0x00, 0x38, 0xff, 0xff, 0x38, 0x30, 0x10, 0xf, 0x7, 0x00, 0x00, 0x00, 0x3, 0x7, 0xf, 0xe, 0x4, 0x2, 0x3, 0x1, 0x00, 0x00, 0x00, 0x1, 0x3, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x1, 0x00, 0x00, 0x00, 0x00, 0x3, 0x7, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x7, 0x3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x1f, 0x1f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xc0, 0xc0, 0xc0, 0x00, 0x00, 0xc0, 0xc0, 0x40, 0x40, 0xc0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x40, 0xc0, 0xc0, 0x40, 0x00, 0x00, 0x00, 0x00, 0xcc, 0xde, 0x84, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x80, 0x80, 0xc0, 0xc0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x40, 0xc0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x7f, 0x7f, 0x20, 0x20, 0x10, 0x00, 0x00, 0x3c, 0x7e, 0x63, 0x40, 0x60, 0x7f, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x27, 0x67, 0x64, 0x44, 0x66, 0x3e, 0x1c, 0x00, 0x00, 0x00, 0x7f, 0x7f, 0x20, 0x00, 0x00, 0x00, 0x20, 0x7f, 0x7f, 0x00, 0x00, 0x20, 0x7f, 0x7f, 0x00, 0x00, 0x00, 0x1f, 0x7f, 0x70, 0x60, 0x40, 0x3f, 0x3f, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };

//lizard racing variables
byte racer[4] = {-1,-1,-1,-1};
byte lizardPosn[4] = {60,60,60,60};
byte lizardMoveCounter = 0;
boolean lizardsGo = false;


//menu variables
byte menuChoice = 0;
bool menuMoveOn = false;

//credit screen varaibles
byte creditScreen = 0;



enum class GameState : uint8_t
{
  SplashScreen,
  MenuScreen,
  LizardRacing,
  NilbogsRevenge,
  OtherGame,
  Credits
};
GameState gameState = GameState::SplashScreen; 

void setup() {
  arduboy.begin();
  arduboy.setFrameRate(30);
  arduboy.initRandomSeed();
}

void loop() {
  arduboy.clear();
  if (!(arduboy.nextFrame()))
    return;

  //check screen mode and display splashScreen of move on
  if (gameState == GameState::SplashScreen) splashScreen();
  if (gameState == GameState::MenuScreen) menuScreen();
  if (gameState == GameState::Credits) credits();
  if (gameState == GameState::LizardRacing) lizardRacing();
}

void splashScreen() {
  //shows splash screen then moves on
  bool moveOn = false;
  arduboy.drawBitmap(0,0,Splash,128,47, WHITE);
  arduboy.setCursor(0,50);  
  arduboy.println(F(" Press A to Continue"));
  arduboy.display();
  while (!moveOn) {
   arduboy.pollButtons();
   if(arduboy.justPressed(A_BUTTON)){
      moveOn = true;
      gameState = GameState::MenuScreen;
      arduboy.clear();
   }
  }  
}

void menuScreen() {
   //arduboy.println("Menu");
   tinyfont.setCursor(0,0);
   tinyfont.print(F("HEY, GOBLIN, YOU WORK AT\nTHE CASINO NOW.\nMAKE THE BOSS HAPPY\nBY MAKING MONEY, OR ELSE!"));
   arduboy.setCursor(0,30);
   arduboy.println("  Lizard Racing");
   arduboy.println("  Nilbogs Revenge");
   arduboy.println("  Other Game");
   arduboy.println("  Credits");
   if (menuChoice == 0) arduboy.setCursor(0,30);
   if (menuChoice == 1) arduboy.setCursor(0,38);
   if (menuChoice == 2) arduboy.setCursor(0,46);  
   if (menuChoice == 3) arduboy.setCursor(0,54);
   arduboy.print (">");
   arduboy.display();
   arduboy.pollButtons();
   if(arduboy.justPressed(DOWN_BUTTON)) menuChoice ++;
   if(arduboy.justPressed(UP_BUTTON)) menuChoice --;
   if (menuChoice > 3) menuChoice = 0;
   if (menuChoice < 0) menuChoice = 3;
   if(arduboy.justPressed(A_BUTTON)){
    menuMoveOn = true;
    if (menuChoice == 0) gameState = GameState::LizardRacing;
    if (menuChoice == 1) gameState = GameState::NilbogsRevenge;
    if (menuChoice == 2) gameState = GameState::OtherGame;
    if (menuChoice == 3) gameState = GameState::Credits;
   }
}

void lizardRacing() {
  //make racer list
  arduboy.clear();
  while (racer[1] == racer[2] || racer[1] == racer[3] || racer[1] == racer[4] || racer[2] == racer[3] || racer[2] == racer[4] || racer[3] == racer[4]){
    for(byte  i = 0; i < 4; i++) {
      racer[i] = random(36);
    }
  }
  arduboy.println(getLizardName(racer[0]));
  arduboy.println(getLizardName(racer[1]));
  arduboy.println(getLizardName(racer[2]));
  arduboy.println(getLizardName(racer[3]));
  arduboy.pollButtons();
  if (arduboy.justPressed(B_BUTTON)) gameState = GameState:: MenuScreen;
  if (!lizardsGo) {
    arduboy.setCursor(0,46);
    arduboy.println(F("Press A to Go"));
    
  }
  if (!lizardsGo && arduboy.justPressed(A_BUTTON)) lizardsGo = true;
  if (lizardsGo) lizardMove();
  arduboy.display();
}

void lizardMove() {
  if (lizardMoveCounter == 0){
    byte posnY = 0;
    for(byte i = 0; i < 4; i++)
    {
      arduboy.setCursor(lizardPosn[i],posnY);
      arduboy.print("~");
      posnY += 8;
    }
    lizardMoveCounter ++;
  }
  else if (lizardMoveCounter < 24) {
    byte posnY = 0;
    for( byte i = 0; i < 4; i++)
    {
      lizardPosn[i] += random(1,4); 
      arduboy.setCursor(lizardPosn[i],posnY);
      arduboy.print("~");
      posnY += 8;
    }
    lizardMoveCounter ++;
  }
  else  {
    byte posnY = 0;
    for( byte i = 0; i < 4; i++)
    {
      arduboy.setCursor(lizardPosn[i],posnY);
      arduboy.print("~");
      posnY += 8;
      lizardWinner();
    }
  }
}

void lizardWinner() {
  byte max_v = 0;
  byte max_i = 0;
 
  for ( int i = 0; i < 4; i++ )
  {
    if ( lizardPosn[i] > max_v )
    {
      max_v = lizardPosn[i];
      max_i = i;
    }
  }
  arduboy.setCursor(0,46);
  arduboy.println(getLizardName(racer[max_i]));
  arduboy.println("is the winner");
}


const char * getLizardName(uint8_t index)
{
  return reinterpret_cast<const char *>(pgm_read_ptr(&LizardNames[index]));
}


void credits()
{
  tinyfont.setCursor(0,0);
  if (creditScreen == 0) tinyfont.print(F("MONSTEROPOLIS IS A \nFABULOUS DESTINATION FOR\nALL WHO HAVE RICHES OR\nWISH TO BECOME RICH. COME\nFOR A STAGE SHOW, PLAY IN\nTHE CASINO, VISIT THE\nMARKETS. CONVEINENTLY\nLOCATED IN NORTHERN\nFAERUN, JUST A SHORT BOAT\nRIDE FROM MIRABAR.")); 
  if (creditScreen == 1) tinyfont.print(F("MONSTEROPOLIS WAS\nFOUNDED BY GREAT,\nBUGBEAR WARLORD\nGOREHUNGER, FRIEND OF\nTHE DWARVES, ANNIHILATOR\nOF THE HILL GIANTS, HIS\nSWASHBUCKLING BROTHER\nGREGEK, NAVIGATOR OF THE\nSKIES, AND THEIR BOON\nCOMPANION SLOOP THE BONE\nHARVESTER, OF THE LIZARD\nFOLK, PARAMOUNT OF THE\nBONE CARVERS.")); 
  if (creditScreen == 2) tinyfont.print(F("THIS RESORT WAS IMAGINED\nBY A BEN, RYAN, ANDREW\nAND DAN, A DUNGEONS AND\nDRAGONS ADVENTURING\nGROUP WHILE ATTEMPTING TO\nSAVE THE WORLD FROM THE\nWRATH OF THE GIANTS."));
  arduboy.display();
  arduboy.pollButtons();
  if(arduboy.justPressed(A_BUTTON)){
    creditScreen ++;
    if (creditScreen > 2) gameState = GameState::MenuScreen;
  }
}
