#include <Tinyfont.h>
#include <Arduboy2.h>
#include "arduino.h"

Arduboy2 arduboy;
Tinyfont tinyfont = Tinyfont(arduboy.sBuffer, Arduboy2::width(), Arduboy2::height());

int gold = 100;

const unsigned char SPLASH[] PROGMEM = {0x79, 0xfe, 0xfe, 0x2, 0x2, 0x7, 0xfd, 0xfd, 0xfd, 0x5, 0x6, 0x2, 0xe, 0xfe, 0xff, 0xe0, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x60, 0x60, 0x60, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x40, 0xe0, 0xe0, 0xc0, 0xc0, 0x40, 0xc0, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xc0, 0xc0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xfe, 0xfe, 0xcf, 0xc0, 0x80, 0x00, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xc0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x40, 0xc0, 0xc0, 0x80, 0x80, 0xc0, 0xc0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x80, 0x80, 0xc0, 0x40, 0x40, 0xe0, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x7, 0xfe, 0xfe, 0x3, 0x00, 0x00, 0x00, 0xe6, 0xf7, 0xe6, 0x22, 0x00, 0x00, 0x00, 0x40, 0xe0, 0xe0, 0x90, 0x90, 0x78, 0xf0, 0xd0, 0x80, 0x4, 0x4, 0x5, 0x7, 0x6, 0x4, 0x7, 0x7, 0x7, 0x4, 0xc, 0xc, 0xf, 0x13, 0x13, 0x10, 0x00, 0x00, 0x00, 0x1f, 0x3f, 0x38, 0x30, 0x20, 0x1f, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0x60, 0x00, 0x40, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x8f, 0x9f, 0x99, 0x98, 0x8, 0xfd, 0xfc, 0xf8, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x3, 0x3, 0xff, 0xff, 0xff, 0x3, 0x7, 0x3, 0x00, 0x00, 0xfc, 0xff, 0xff, 0x81, 0x00, 0x3, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0x80, 0x80, 0x81, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x3f, 0x7f, 0xff, 0xf0, 0x60, 0x60, 0x3f, 0x3f, 0x1f, 0x00, 0x00, 0x00, 0x30, 0x3f, 0x3f, 0x10, 0x00, 0x00, 0x00, 0xf, 0x1f, 0x1f, 0x8, 0x00, 0x00, 0x00, 0x00, 0x4, 0x5, 0xc, 0xc, 0x4, 0x7, 0x3, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x1, 0x3, 0x3, 0x3, 0x1, 0x1, 0x1, 0x00, 0x00, 0x00, 0x3, 0x7, 0xf, 0x6, 0x00, 0x00, 0x00, 0x6, 0x1f, 0x1f, 0xf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x3, 0x7, 0xf, 0x7, 0x2, 0x3, 0x1, 0x00, 0x00, 0x00, 0xc1, 0x7f, 0x3f, 0x7f, 0x1, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xfc, 0x8e, 0x2, 0x1, 0x1, 0x1, 0x3, 0x6, 0x7, 0x3, 0x00, 0x00, 0xd8, 0x30, 0x50, 0xf8, 0xf0, 0x00, 0x00, 0x00, 0x60, 0x50, 0x58, 0x58, 0xd8, 0x00, 0x00, 0x12, 0xf7, 0xf2, 0x00, 0x00, 0x10, 0xf8, 0xf0, 0x10, 0x18, 0xf0, 0xe0, 0x00, 0xe0, 0xf0, 0x10, 0x18, 0xf8, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x3, 0x6, 0x4, 0x4, 0x4, 0x6, 0x3, 0x7, 0x6, 0x00, 0x00, 0x3, 0x3, 0x2, 0x3, 0x3, 0x1, 0x00, 0x00, 0x3, 0x3, 0x2, 0x2, 0x1, 0x00, 0x00, 0x1, 0x3, 0x3, 0x00, 0x00, 0x00, 0x3, 0x3, 0x00, 0x3, 0x3, 0x3, 0x00, 0x1, 0x3, 0x2, 0x2, 0x3, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

enum class GameState : uint8_t
{
  SplashScreen,
  MenuScreen,
  AxeBeakRacing,
  NilbogsRevenge,
};
GameState gameState = GameState::SplashScreen; 

void setup() {
  arduboy.begin();
  arduboy.setFrameRate(30);
  arduboy.initRandomSeed();
}

void loop() {
  arduboy.clear();
  if (!(arduboy.nextFrame()))
    return;

  //check screen mode and display splashScreen of move on
  if (gameState == GameState::SplashScreen) splashScreen();
  if (gameState == GameState::MenuScreen) menuScreen();
  
}

void splashScreen()
{
  //shows splash screen then moves on
  bool moveOn = false;
  arduboy.drawBitmap(0,0,SPLASH,128,47, WHITE);
  arduboy.setCursor(0,50);  
  arduboy.println(F(" Press A to Continue"));
  arduboy.display();
  while (!moveOn) {
   arduboy.pollButtons();
   if(arduboy.justPressed(A_BUTTON)){
      moveOn = true;
      gameState = GameState::MenuScreen;
      arduboy.clear();
   }
  }  
}

byte menuChoice = 0;
bool menuMoveOn = false;

void menuScreen()
{

   
   //arduboy.println("Menu");
   tinyfont.setCursor(0,0);
   tinyfont.print(F("HEY, GOBLIN, YOU WORK AT\nTHE CASINO NOW.\nMAKE THE BOSS HAPPY\nBY MAKING MONEY, OR ELSE!"));
   arduboy.setCursor(0,30);
   arduboy.println("  Lizard Racing");
   arduboy.println("  Nilbogs Revenge");
   arduboy.println("  Other Game");
   //arduboy.display();
   if (menuChoice == 0) arduboy.setCursor(0,30);
   if (menuChoice == 1) arduboy.setCursor(0,38);
   if (menuChoice == 2) arduboy.setCursor(0,46);  
   arduboy.print (">");
   arduboy.display();
   arduboy.pollButtons();
   if(arduboy.justPressed(DOWN_BUTTON)) menuChoice ++;
   if(arduboy.justPressed(UP_BUTTON)) menuChoice --;
   if (menuChoice > 2) menuChoice = 0;
   if (menuChoice < 0) menuChoice = 2;
   if(arduboy.justPressed(A_BUTTON)){
    menuMoveOn = true;
    gameState = GameState::SplashScreen;
   }
}

void axeBeakRacing()
{
  arduboy.println("Choose an axebeak");
 
  
}
